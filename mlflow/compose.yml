services:
  postgres:
    image: postgres:13.22-trixie
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      TZ: "Asia/Tokyo"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - mlflow-postgres-data:/var/lib/postgresql/data
    networks:
      - mlflow-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "5000"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      MLFLOW_BACKEND_STORE_URI: "postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
      AWS_PROFILE: "${AWS_PROFILE:-default}"
      DEFAULT_ARTIFACT_ROOT: "${DEFAULT_ARTIFACT_ROOT}"
      TZ: "Asia/Tokyo"
    ports:
      - "${MLFLOW_PORT:-5000}:5000"
    networks:
      - mlflow-net
    volumes:
      - ~/.aws:/root/.aws:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri "${MLFLOW_BACKEND_STORE_URI}"
      --default-artifact-root "${DEFAULT_ARTIFACT_ROOT}"
      --artifacts-destination "${DEFAULT_ARTIFACT_ROOT}"
      --serve-artifacts

volumes:
  mlflow-postgres-data:

networks:
  mlflow-net:
    driver: bridge
